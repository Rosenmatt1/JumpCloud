{"version":3,"sources":["Components/ListItem.js","Components/List.js","App.js","index.js"],"names":["ListItem","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","console","log","reminder","done","react_default","a","createElement","className","edit","onChange","e","editedDescription","placeholder","onClick","saveChanges","id","description","type","checked","value","completedTask","deleteReminder","editReminder","React","Component","List","reminders","map","Components_ListItem","key","url","App","preventDefault","target","mappedCompleted","state","Number","setState","addReminder","createReminder","newReminder","length","fetch","method","body","JSON","stringify","headers","Content-Type","Accept","concat","toConsumableArray","_ref","asyncToGenerator","regenerator_default","mark","_callee","removeReminder","returnTheRest","wrap","_context","prev","next","filter","stop","_x","apply","arguments","editSelector","newDescription","_ref2","_callee2","convertIdtoNumber","editedReminder","singleReminder","mappedReminders","_context2","_x2","_this2","then","data","json","res","addEdit","_this3","Components_List","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a5b42738.chunk.js","sourcesContent":["import React from 'react'\n\nclass ListItem extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    console.log(this.props.reminder.done)\n    return (\n      <div>\n\n        <li className={this.props.reminder.done === true ? \"todo completed\" : \"todo incomplete\"}>\n          <span className=\"task\"> Task: </span>\n          {this.props.reminder.edit === true\n            ? \n            <div>\n              <input\n                className=\"change\"\n                onChange={(e) => this.props.editedDescription(e)}\n                placeholder=\"Edit Task Here\"\n              />\n              <button\n                className=\"reminderButton text mx-3\"\n                onClick={() => this.props.saveChanges(this.props.id)}\n              >\n                Save\n              </button>\n            </div>\n            : \n            this.props.description}\n        </li>\n\n        <label className=\"check\"> &nbsp; Check if Completed </label>\n\n        <input\n          className=\"form-check-input mx-3\"\n          type=\"checkbox\"\n          checked={this.props.done ? true : false}\n          id={this.props.id}\n          value={this.props.done}\n          onClick={this.props.completedTask}\n        />\n\n        <button\n          className=\"reminderButton text mx-3\"\n          onClick={() => this.props.deleteReminder(this.props.id)}\n        >\n          Remove\n        </button>\n\n        <button\n          className=\"reminderButton text mx-3\"\n          onClick={() => this.props.editReminder(this.props.id)}\n        >\n          Edit\n        </button>\n\n      </div>\n    )\n  }\n}\n\nexport default ListItem","import React from 'react'\nimport ListItem from './ListItem.js'\n\nclass List extends React.Component {\n\n  render() {\n    return (\n      <ul>\n        {this.props.reminders.map(reminder => {\n          return <ListItem\n            key={reminder.id}\n            id={reminder.id}\n            done={reminder.done}\n            reminder={reminder}\n            description={reminder.description}\n            edit={this.props.edit}\n            deleteReminder={this.props.deleteReminder}\n            completedTask={this.props.completedTask}\n            editedDescription={this.props.editedDescription}\n            editReminder={this.props.editReminder}\n            saveChanges={this.props.saveChanges}\n          />\n        })}\n      </ul>\n    )\n  }\n}\n\nexport default List","import React, { Component } from 'react';\nimport './App.css';\nimport List from './Components/List.js'\n\nconst url = 'http://localhost:8004/api/todos'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      reminders: [],\n      description: \"\",\n      newDescription: \"\",\n      edit: false\n    }\n  }\n\n  componentDidMount() {\n    fetch(url)\n      .then(data => data.json())\n      .then(res => {\n        let addEdit = res.map(reminder => {\n          reminder.edit = false\n          return reminder\n        })\n        this.setState({\n          reminders: addEdit,\n        })\n      })\n  }\n\n  completedTask = (e) => {\n    e.preventDefault()\n    console.log(\"e\", e.target)\n    const mappedCompleted = this.state.reminders.map(reminder => {\n      if (reminder.id === Number(e.target.id)) {\n        reminder.done = !reminder.done\n      }\n      return reminder\n    })\n    console.log(mappedCompleted)\n    this.setState({\n      reminders: mappedCompleted\n    })\n  }\n\n  addReminder = (e) => {\n    e.preventDefault()\n    this.setState({\n      description: e.target.value\n    })\n  }\n\n  createReminder = (e) => {\n    e.preventDefault()\n    const newReminder = {\n      id: this.state.reminders[this.state.reminders.length -1].id + 1,\n      done: false,\n      edit: false,\n      description: this.state.description\n    }\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(newReminder),\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      }\n    })\n    this.setState({\n      reminders: [...this.state.reminders, newReminder],\n      description: \"\",\n    })\n  }\n\n  deleteReminder = async (id) => {\n    const removeReminder = this.state.reminders.filter(reminder => {\n      if (reminder.id === id) {\n      }\n      return reminder.id\n    })\n    const returnTheRest = this.state.reminders.filter(reminder => reminder.id !== id)\n    await fetch(`http://localhost:8004/api/todos/${id}`, {\n      method: 'DELETE',\n      body: JSON.stringify(removeReminder),\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      }\n    })\n    this.setState({\n      reminders: returnTheRest,\n    })\n  }\n\n  editReminder = (id) => {\n    console.log(\"editReminder\")\n    let editSelector = this.state.reminders.map(reminder => {\n      if (reminder.id === id) {\n        reminder.edit = !reminder.edit\n      }\n      return reminder\n    })\n    this.setState({\n      reminders: editSelector\n    })\n  }\n\n  editedDescription = (e) => {\n    e.preventDefault()\n    this.setState({\n      newDescription: e.target.value\n    })\n  }\n\n  saveChanges = async (id) => {\n    const convertIdtoNumber = Number(id)\n    const editedReminder = {\n      id: convertIdtoNumber,\n      description: this.state.newDescription,\n      done: false,\n      edit: false\n    }\n    const singleReminder = this.state.reminders.filter(reminder => reminder.id === id)\n    console.log(singleReminder[0].id)\n    const mappedReminders = this.state.reminders.map(reminder => {\n      if (id === reminder.id && reminder.edit === true) {\n        reminder.description = this.state.newDescription\n      }\n      return reminder\n    })\n    await fetch(`url${singleReminder[0].id}`, {\n      method: 'PUT',\n      body: JSON.stringify(editedReminder),\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      }\n    })\n    await this.setState({\n      reminders: mappedReminders,\n      edit: false\n    })\n    this.editReminder(id)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <h1 className=\"title\"> The Jump Cloud To Do List </h1>\n        <i className=\"cloudIcon fas fa-cloud\"></i>\n\n        <List\n          reminders={this.state.reminders}\n          edit={this.state.edit}\n          completedTask={this.completedTask}\n          deleteReminder={this.deleteReminder}\n          editReminder={this.editReminder}\n          editedDescription={this.editedDescription}\n          saveChanges={this.saveChanges}\n        />\n\n        <input \n          className=\"input form-control\"\n          value={this.state.description}\n          placeholder={this.state.description === \"\" ? \"Enter new task\" : this.state.description}\n          onChange={(e) => this.addReminder(e)} />\n\n        <button\n          className=\"addReminder mx-auto\"\n          onClick={(e) => this.createReminder(e)}\n          type=\"text\"\n        > Create New Reminder\n        </button>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}