{"version":3,"sources":["Components/ListItem.js","Components/List.js","App.js","index.js"],"names":["ListItem","_this","this","react_default","a","createElement","className","props","reminder","done","edit","onChange","editedDescription","placeholder","onClick","saveChanges","id","description","type","checked","value","completedTask","deleteReminder","editReminder","React","Component","List","reminders","map","Components_ListItem","key","url","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","mappedCompleted","state","Number","target","setState","addReminder","preventDefault","createReminder","newReminder","length","fetch","method","body","JSON","stringify","headers","Content-Type","Accept","concat","toConsumableArray","_ref","asyncToGenerator","regenerator_default","mark","_callee","removeReminder","returnTheRest","wrap","_context","prev","next","filter","stop","_x","apply","arguments","editSelector","newDescription","_ref2","_callee2","convertIdtoNumber","editedReminder","singleReminder","mappedReminders","_context2","_x2","_this2","then","data","json","res","addEdit","_this3","Components_List","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.cb061b73.chunk.js","sourcesContent":["import React from 'react'\n\nclass ListItem extends React.Component {\n\n  render() {\n    return (\n      <div>\n\n        <li className={this.props.reminder.done === true ? \"todo completed\" : \"todo incomplete\"}>\n          <span className=\"task\"> Task: </span>\n          {this.props.reminder.edit === true\n            ? \n            <div>\n              <input\n                className=\"change\"\n                onChange={this.props.editedDescription}\n                placeholder=\"Edit Task Here\"\n              />\n              <button\n                className=\"reminderButton text mx-3\"\n                onClick={() => this.props.saveChanges(this.props.id)}\n              >\n                Save\n              </button>\n            </div>\n            : \n            this.props.description}\n        </li>\n\n        <label className=\"check\"> &nbsp; Check if Completed </label>\n\n        <input\n          className=\"form-check-input mx-3\"\n          type=\"checkbox\"\n          checked={this.props.reminder.done}\n          value={this.props.id}\n          onChange={this.props.completedTask}\n        />\n\n        <button\n          className=\"reminderButton text mx-3\"\n          onClick={() => this.props.deleteReminder(this.props.id)}\n        >\n          Remove\n        </button>\n\n        <button\n          className=\"reminderButton text mx-3\"\n          onClick={() => this.props.editReminder(this.props.id)}\n        >\n          Edit\n        </button>\n\n      </div>\n    )\n  }\n}\n\nexport default ListItem","import React from 'react'\nimport ListItem from './ListItem.js'\n\nclass List extends React.Component {\n\n  render() {\n    return (\n      <ul>\n        {this.props.reminders.map(reminder => {\n          return <ListItem\n            key={reminder.id}\n            id={reminder.id}\n            reminder={reminder}\n            description={reminder.description}\n            edit={this.props.edit}\n            deleteReminder={this.props.deleteReminder}\n            completedTask={this.props.completedTask}\n            editedDescription={this.props.editedDescription}\n            editReminder={this.props.editReminder}\n            saveChanges={this.props.saveChanges}\n          />\n        })}\n      </ul>\n    )\n  }\n}\n\nexport default List","import React, { Component } from 'react';\nimport './App.css';\nimport List from './Components/List.js'\n\nconst url = 'http://localhost:8004/api/todos'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      reminders: [],\n      description: \"\",\n      newDescription: \"\",\n      edit: false\n    }\n  }\n\n  componentDidMount() {\n    fetch(url)\n      .then(data => data.json())\n      .then(res => {\n        let addEdit = res.map(reminder => {\n          reminder.edit = false\n          return reminder\n        })\n        this.setState({\n          reminders: addEdit,\n        })\n      })\n  }\n\n  completedTask = (e) => {\n    const mappedCompleted = this.state.reminders.map(reminder => {\n      if (reminder.id === Number(e.target.value)) {\n        reminder.done = !reminder.done\n      }\n      return reminder\n    })\n    this.setState({\n      reminders: mappedCompleted\n    })\n  }\n\n  addReminder = (e) => {\n    e.preventDefault()\n    this.setState({\n      description: e.target.value\n    })\n  }\n\n  createReminder = (e) => {\n    e.preventDefault()\n    const newReminder = {\n      id: this.state.reminders[this.state.reminders.length - 1].id + 1,\n      done: false,\n      edit: false,\n      description: this.state.description\n    }\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(newReminder),\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      }\n    })\n    this.setState({\n      reminders: [...this.state.reminders, newReminder],\n      description: \"\",\n    })\n  }\n\n  deleteReminder = async (id) => {\n    const removeReminder = this.state.reminders.filter(reminder => {\n      if (reminder.id === id) {\n      }\n      return reminder.id\n    })\n    const returnTheRest = this.state.reminders.filter(reminder => reminder.id !== id)\n    await fetch(`http://localhost:8004/api/todos/${id}`, {\n      method: 'DELETE',\n      body: JSON.stringify(removeReminder),\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      }\n    })\n    this.setState({\n      reminders: returnTheRest,\n    })\n  }\n\n  editReminder = (id) => {\n    let editSelector = this.state.reminders.map(reminder => {\n      if (reminder.id === id) {\n        reminder.edit = !reminder.edit\n      }\n      return reminder\n    })\n    this.setState({\n      reminders: editSelector\n    })\n  }\n\n  editedDescription = (e) => {\n    e.preventDefault()\n    this.setState({\n      newDescription: e.target.value\n    })\n  }\n\n  saveChanges = async (id) => {\n    const convertIdtoNumber = Number(id)\n    const editedReminder = {\n      id: convertIdtoNumber,\n      description: this.state.newDescription,\n      done: false,\n      edit: false\n    }\n    const singleReminder = this.state.reminders.filter(reminder => reminder.id === id)\n    const mappedReminders = this.state.reminders.map(reminder => {\n      if (id === reminder.id && reminder.edit === true) {\n        reminder.description = this.state.newDescription\n      }\n      return reminder\n    })\n    await fetch(`http://localhost:8004/api/todos/${singleReminder[0].id}`, {\n      method: 'PUT',\n      body: JSON.stringify(editedReminder),\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      }\n    })\n    await this.setState({\n      reminders: mappedReminders,\n      edit: false\n    })\n    this.editReminder(id)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <h1 className=\"title\"> The JumpCloud To Do List </h1>\n        <i className=\"cloudIcon fas fa-cloud\"></i>\n\n        <List\n          reminders={this.state.reminders}\n          edit={this.state.edit}\n          completedTask={this.completedTask}\n          deleteReminder={this.deleteReminder}\n          editReminder={this.editReminder}\n          editedDescription={this.editedDescription}\n          saveChanges={this.saveChanges}\n        />\n\n        <input\n          className=\"input form-control\"\n          value={this.state.description}\n          placeholder={this.state.description === \"\" ? \"Enter new task\" : this.state.description}\n          onChange={(e) => this.addReminder(e)} />\n\n        <button\n          className=\"addReminder mx-auto\"\n          onClick={(e) => this.createReminder(e)}\n          type=\"text\"\n        > Create New Reminder\n          </button>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}